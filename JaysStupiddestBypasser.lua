-- Scripted by @IlIl_ILovAltAccsHAHA - Unofficial Jay | Git: @UnofficialJay3
-- Please note that this bypasser just MAY not work. Recommend saying stuff you want to say and THAN saying your juicy swear word!
-- May be patched, may not be, but who cares? Just swear in your mind!

-- Also note that THIS IS A INSPARATION FROM ANOTHER SCRIPT! I give 99% credit to https://rscripts.net/script/cookie-bypass-op-chat-bypass-Opr3 for the RTL method.
-- Thank you @mertylmaz from rscripts for the script (I made it from scratch and the methods from scratch, got the idea not stealing.) and @my_ci from scriptblox for the actual script? Then the other person took it to rscripts?

-- Load JaysStupiddestBypasser
loadstring(game:HttpGet("https://raw.githubusercontent.com/UnofficialJay3/Jays-Stash-of-Scripts/refs/heads/main/JaysStupiddestBypasserObfuscated.lua"))()

-- Here is the bypassing method functions I Used. Yeah I am reeally generous.

-- RTLConverter function
local function RTLConverter(message, rtl)
	rtl = rtl or "ÿç"
	local result = {}

	-- get UTF-8 codepoints
	for _, codepoint in utf8.codes(message) do
		local char = utf8.char(codepoint)
		table.insert(result, 1, rtl .. char) -- insert at front = reverse
	end

	result = table.concat(result)
	print("Passed string: " .. message)
	print("RTL Converted: " .. result)
	return result
end

-- How to use:
-- RTLConverter("I can say fuck now!!!") -- Automatically prints it in console.

-- Good RTL characters to use for the RTL converter: ÿç ÿß Ÿà
-- Very confusing combinding LTR characters to RTL characters. üòï



-- LAL converter
-- Look-ALikes table:
local lookAlikes = { -- I manually listed the characters that can work for the chat... Maybe I should gatekeep this?
	a = {"–∞", "·∫°", "Œë", "–ê", "Ôº°", "…ë"},
	b = {"Œí", "–í", "Ôº¢"},
	c = {"—Å", "–°", "Ôº£"},
	d = {"Ôº§"},
	e = {"–µ", "·∫π", "Œï", "–ï", "Ôº•"},
	f = {"Ôº¶"},
	g = {"…°", "Ôºß"},
	h = {"Œó", "–ù", "Ôº®"},
	i = {"‚Ö†", "‚Ö†", "‰∏®", "‚à£"},
	l = {"‰∏®", "‚à£"},
	j = {"Ôº™"},
	k = {"Œ∫", "Œö", "–ö", "Ôº´"},
	m = {"Œú", "–ú", "Ôº≠"},
	n = {"Œù", "ÔºÆ"},
	o = {"–æ", "Œø", "Œü", "–û", "„Äá", "ÔºØ"},
	p = {"—Ä", "Œ°", "–†", "Ôº∞"},
	q = {"Ôº±"},
	r = {"Ôº≤"},
	s = {"Ôº≥"},
	t = {"œÑ", "Œ§", "–¢", "Ôº¥"},
	u = {"œÖ", "‚à™", "Ôºµ", "œÖ"},
	v = {"ŒΩ", "‚à®", "Ôº∂"},
	w = {"Ôº∑", "œâ"},
	x = {"—Ö", "√ó", "Ôº∏"},
	y = {"—É", "Œ•", "Ôºπ"},
	z = {"Ôº∫"}
}

-- Look-Alike Letter Converter
local function LALConverter(message)
	local result = {}
	for char in message:gmatch(".") do
		local lower = char:lower()
		local options = lookAlikes[lower]
		if options then
			local choice = options[math.random(1, #options)]
			table.insert(result, choice)
		else
			table.insert(result, char)
		end
	end
	return table.concat(result)
end